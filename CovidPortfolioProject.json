{
	"workspace": {
		"-tabs-0": {
			"tabname": "Tab",
			"query": {
				"useQueryCache": true,
				"useLegacySql": false,
				"querytext": "-- selecting all data and sorting by columns 3 and 4
					SELECT *
					FROM `covid-data-382903.CovidDeaths.CovidDeaths`
					Where continent is not null
					ORDER BY 3, 4;
					
					-- selecting specific columns and sorting by location and date
					SELECT location, date, total_cases, new_cases, total_deaths, population
					FROM `covid-data-382903.CovidDeaths.CovidDeaths`
					Where continent is not null
					ORDER BY 1, 2;
					
					--looking at total cases v total deaths in the US
					SELECT location, date, total_cases, total_deaths,(total_deaths/total_cases)*100 as DeathPercentage 
					FROM `covid-data-382903.CovidDeaths.CovidDeaths`
					Where location like '%States%'
					and continent is not null
					ORDER BY 1, 2;
					
					--looking at the total cases v population
					--shows what percentage of population got Covid in the US
					SELECT location, date, total_cases, population, (total_cases/population)*100 as PerecentPopulationInfected 
					FROM `covid-data-382903.CovidDeaths.CovidDeaths`
					Where location like '%States%'
					and continent is not null
					ORDER BY 1, 2;
					
					--looking at countries with highest infection rate compared to population
					SELECT location, MAX(total_cases) as HighestInfectionCount, population, MAX(total_cases/population)*100 as PercentPopulationInfected 
					FROM `covid-data-382903.CovidDeaths.CovidDeaths`
					--Where location like '%States%'
					Where continent is not null
					Group by location, population
					ORDER BY PercentPopulationInfected desc;
					
					--showing countries with the highest death count per population
					SELECT location, MAX(cast(total_deaths as int)) as TotalDeathCount
					FROM `covid-data-382903.CovidDeaths.CovidDeaths`
					--Where location like '%States%'
					Where continent is not null
					Group by location
					ORDER BY TotalDeathCount desc;
					
					-- showing continents with the highest death count per population
					SELECT continent, MAX(cast(total_deaths as int)) as TotalDeathCount
					FROM `covid-data-382903.CovidDeaths.CovidDeaths`
					--Where location like '%States%'
					Where continent is not null
					Group by continent
					ORDER BY TotalDeathCount desc;
					
					SELECT location, MAX(cast(total_deaths as int)) as TotalDeathCount
					FROM `covid-data-382903.CovidDeaths.CovidDeaths`
					--Where location like '%States%'
					Where continent is null and location not like '%income%'
					Group by location
					ORDER BY TotalDeathCount desc;
					
					SELECT location, date, total_cases, total_deaths, 
					       (total_deaths / NULLIF(total_cases, 0)) * 100 AS DeathPercentage 
					FROM `covid-data-382903.CovidDeaths.CovidDeaths`
					WHERE location LIKE '%States%' AND continent IS NOT NULL
					ORDER BY 1, 2;
					
					-- Global Numbers
					
					SELECT SUM(new_cases) as total_cases, SUM(cast(new_deaths as int)) as total_deaths, SUM(cast(new_deaths as int))/SUM(NULLIF(new_cases,0))*100 as DeathPercentage
					FROM `covid-data-382903.CovidDeaths.CovidDeaths`
					WHERE continent IS NOT NULL
					--GROUP BY date
					ORDER BY 1, 2;
					
					--Total Population vs Vaccinations
					SELECT dea.continent, dea.location, dea.date, dea.population,  vac.new_vaccinations
					FROM `covid-data-382903.CovidDeaths.CovidDeaths` dea
					Join `covid-data-382903.CovidDeaths.CovidVaccinations` vac 
					  On dea.location = vac.location  
					  and dea.date = vac.date
					WHERE dea.continent is not null
					ORDER BY 1,2,3;
					
					--percentage of population that has recieved at least 1 vaccine
					
					SELECT dea.continent, dea.location, dea.date, dea.population,  vac.new_vaccinations, SUM(cast(vac.new_vaccinations as int))
					 OVER (Partition by dea.location order by dea.location, dea.date) as RollingPeopleVaccinated
					FROM `covid-data-382903.CovidDeaths.CovidDeaths` dea
					Join `covid-data-382903.CovidDeaths.CovidVaccinations` vac 
					  On dea.location = vac.location  
					  and dea.date = vac.date
					WHERE dea.continent is not null
					ORDER BY 1,2,3;
					
					-- Using CTE
					WITH PopvsVac AS (
					  SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
					    SUM(CAST(vac.new_vaccinations AS INT)) OVER (PARTITION BY dea.location ORDER BY dea.date) AS RollingPeopleVaccinated
					  FROM `covid-data-382903.CovidDeaths.CovidDeaths` dea
					  JOIN `covid-data-382903.CovidDeaths.CovidVaccinations` vac 
					    ON dea.location = vac.location  
					    AND dea.date = vac.date
					  WHERE dea.continent IS NOT NULL
					)
					SELECT *
					FROM PopvsVac
					ORDER BY 1,2,3;
					
					WITH PercentPopulationVaccinated AS (
					  SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations, 
					    SUM(cast(vac.new_vaccinations AS int)) OVER (PARTITION BY dea.location ORDER BY dea.location, dea.date) AS RollingPeopleVaccinated
					  FROM `covid-data-382903.CovidDeaths.CovidDeaths` dea
					  JOIN `covid-data-382903.CovidDeaths.CovidVaccinations` vac 
					    ON dea.location = vac.location  
					    AND dea.date = vac.date
					  WHERE dea.continent IS NOT NULL
					)
					SELECT *, (RollingPeopleVaccinated / Population) * 100 AS PercentVaccinated
					FROM PercentPopulationVaccinated
					ORDER BY 1,2,3;
					
					-- Creating View to store data for later visualizations
					
					CREATE VIEW CovidDeaths.PercentPopulationVaccinated AS
					WITH PopvsVac AS (
					  SELECT dea.continent, dea.location, dea.date, dea.population, vac.new_vaccinations,
					    SUM(CAST(vac.new_vaccinations AS INT)) OVER (PARTITION BY dea.location ORDER BY dea.date) AS RollingPeopleVaccinated
					  FROM `covid-data-382903.CovidDeaths.CovidDeaths` dea
					  JOIN `covid-data-382903.CovidDeaths.CovidVaccinations` vac 
					    ON dea.location = vac.location  
					    AND dea.date = vac.date
					  WHERE dea.continent IS NOT NULL
					)
					SELECT *, (RollingPeopleVaccinated/Population)*100 as PercentVaccinated
					FROM PopvsVac
					ORDER BY 1,2,3;"
			},
			"options": {
				"mode": "standard",
				"autoUpdateSqlMode": false,
				"enhancedMode": false,
				"destinationTbl": "",
				"writeDisposition": "WRITE_EMPTY",
				"retention": "",
				"retentionUnit": "days",
				"allowLargeResults": false,
				"flattenResults": true,
				"maximumBillingTier": "",
				"maximumBytes": "",
				"maximumBytesMultiplier": "3",
				"location": "US/EU"
			}
		}
	}
}